JDBC to Spring JDBC to JPA to Spring Data JPA

1. JDBC
     write a lot of sql queries
     and write a lot of java code

2. Spring JDBC
     write a lot of sql queries
     but lesser java code

3. JPA
    Do NOT worry about queries
    just map entities to tables

4. spring Data JPA
   let's make JPA even more simple
   I will take care of everything


Hibernate vs JPA

1. JPA defines the specification. It is an API.
    How do you define entities?
    How do you map attributes?
    who manages the entities?

2. Hibernate is one of the most popular implementation of JPA.
3. USING Hibernate directly would result in a lock in to Hibernate
    There are other JPA implementations(TOPLINK, for example)